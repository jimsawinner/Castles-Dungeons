#BlueJ class context
comment0.target=Char
comment0.text=\n\ Write\ a\ description\ of\ class\ Char\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=Char()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Char\n
comment10.params=
comment10.target=boolean\ hasItems()
comment10.text=\n\ hasItems\ checks\ if\ the\ player\ has\ ANY\ \n\ items\ in\ the\ inventory\n\ \n\ @return\ \ true\ if\ the\ player\ has\ >0\ items\ otherwise\ false\n
comment11.params=name\ item
comment11.target=void\ addItem(java.lang.String,\ Item)
comment11.text=\n\ addItem\ adds\ a\ new\ item\ object\ to\ the\ players\ inventory\n\ \n\ @params\ \ String\ name\ -\ item\ key,\ Item\ item\ -\ item\ object\n
comment12.params=name
comment12.target=Item\ getItem(java.lang.String)
comment12.text=\n\ getItem\ retrieves\ an\ item\ from\ the\ players\ inventory\n\ \n\ @params\ \ String\ name\ -\ the\ name\ (key)\ of\ an\ item\n\ @return\ \ Item\ the\ item\ object\ if\ found\n
comment13.params=name
comment13.target=void\ removeItem(java.lang.String)
comment13.text=\n\ removeItem\ removes\ an\ item\ from\ the\ players\ inventory\n\ \n\ @params\ \ String\ name\ -\ the\ name\ (key)\ of\ an\ item\n
comment14.params=itemName
comment14.target=boolean\ takeItem(java.lang.String)
comment14.text=\n\ takeItem\ checks\ if\ inventory\ is\ not\ already\ full\ and\n\ proceeds\ to\ add\ the\ item\ to\ the\ players\ inventory\ and\n\ remove\ it\ from\ the\ players\ currentPosition\ (location)\n\ \n\ @params\ \ String\ name\ -\ the\ name\ (key)\ of\ an\ item\n\ @return\ \ boolean\ True\ if\ success\ throws\ a\ custom\ InventoryException\ otherwise\n
comment15.params=itemName
comment15.target=boolean\ dropItem(java.lang.String)
comment15.text=\n\ takeItem\ removes\ the\ item\ from\ the\ players\ inventory\n\ and\ then\ adds\ it\ to\ the\ players\ currentPosition\n\ \n\ @params\ \ String\ name\ -\ the\ name\ (key)\ of\ an\ item\n\ @return\ \ boolean\ True\ if\ success\ false\ otherwise\n
comment16.params=
comment16.target=Location\ getCurrentPosition()
comment16.text=\n\ getCurrentPosition\ returns\ the\ players\ current\ position\ as\ a\ location\n\ \n\ @return\ \ Location\ \ \ \ the\ players\ current\ location\ object\n
comment17.params=location
comment17.target=void\ setCurrentPosition(Location)
comment17.text=\n\ setCurrentPosition\ method\n\ \n\ Sets\ the\ players\ current\ location\ (brute\ force\ compared\ to\ move)\n\ \n\ @param\ \ \ Location\ \ \ \ a\ location\ object\ to\ set\ as\ the\ players\ current\ position\n
comment2.params=target
comment2.target=boolean\ attack(Char)
comment3.params=attacker
comment3.target=boolean\ defend(Char)
comment4.params=
comment4.target=int\ getHp()
comment5.params=
comment5.target=int\ getMaxHp()
comment6.params=
comment6.target=int\ getAp()
comment7.params=
comment7.target=java.lang.String\ getInventoryString()
comment7.text=\n\ Return\ a\ string\ describing\ the\ players\ inventory,\ for\ example\n\ "Inventory\:\ health".\n\ \n\ @return\ Details\ of\ the\ players\ inventory\n
comment8.params=
comment8.target=java.util.ArrayList\ getInventoryItemsArray()
comment8.text=\n\ Return\ a\ string\ describing\ the\ players\ inventory,\ for\ example\n\ "Inventory\:\ health".\n\ \n\ @return\ Details\ of\ the\ players\ inventory\n
comment9.params=k
comment9.target=boolean\ hasItem(java.lang.String)
comment9.text=\n\ hasItem\ checks\ if\ the\ player\ has\ an\ item\ with\n\ particular\ key\ in\ inventory\n\ \n\ @param\ \ \ String\ \ k\ the\ items\ key\n\ @return\ \ true\ if\ the\ player\ has\ the\ item\ otherwise\ false\n
numComments=18
