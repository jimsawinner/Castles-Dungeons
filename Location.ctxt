#BlueJ class context
comment0.target=Location
comment0.text=\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\n\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\n\ \n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\n\ @version\ 2008.03.30\n
comment1.params=description\ type\ point
comment1.target=Location(java.lang.String,\ LocationType,\ java.awt.Point)
comment1.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\n\ "an\ open\ court\ yard".\n\ @param\ description\ The\ room's\ description.\n
comment10.params=
comment10.target=boolean\ hasItems()
comment10.text=\n\ Checks\ if\ the\ location\ holds\ any\ items\n
comment11.params=name\ item
comment11.target=void\ addItem(java.lang.String,\ Item)
comment11.text=\n\ Adds\ an\ item\ to\ the\ location\n\ \n\ @params\ String\ name,\ Item\ item\n
comment12.params=name
comment12.target=Item\ getItem(java.lang.String)
comment12.text=\n\ Gets\ an\ item\ object\ if\ it\ exists\ in\ the\ location\n\ \n\ @params\ String\ name\ -\ the\ name\ of\ the\ item\n
comment13.params=name
comment13.target=void\ removeItem(java.lang.String)
comment13.text=\n\ Remove\ an\ item\ object\ from\ the\ items\ HashMap\ if\ exists\n\ \n\ @params\ String\ name\ -\ the\ name\ of\ the\ item\n
comment14.params=key
comment14.target=java.lang.String\ getItemName(java.lang.String)
comment14.text=\n\ Returns\ an\ items\ name\ by\ its\ key.\n\ \n\ @params\ String\ key\n\ @return\ String\ -\ the\ items\ name\n
comment15.params=name\ character
comment15.target=void\ addNPC(java.lang.String,\ Character)
comment15.text=\n\ Add\ a\ non\ playable\ character\ to\ the\ location\n\ \n\ @params\ String\ name,\ Character\ object\n
comment16.params=
comment16.target=java.util.HashMap\ getNPCs()
comment16.text=\n\ Returns\ the\ HashMap\ of\ NPC's\ at\ this\ location\n\ \n\ @return\ HashMap<String,\ Character>\n
comment17.params=
comment17.target=LocationType\ getLocationType()
comment17.text=\n\ Get\ the\ location\ type\n\ \n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Location)
comment2.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ location\ to\ which\ the\ exit\ leads.\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\n\ @return\ The\ short\ description\ of\ the\ room\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\n
comment4.params=
comment4.target=java.lang.String\ getLongDescription()
comment4.text=\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ Exits\:\ north\ west\n\ @return\ A\ long\ description\ of\ this\ location\n
comment5.params=
comment5.target=java.lang.String\ getExitString()
comment5.text=\n\ Return\ a\ string\ describing\ the\ location's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ @return\ Details\ of\ the\ location's\ exits.\n
comment6.params=
comment6.target=java.lang.String\ getCharactersString()
comment6.text=\n\ Return\ a\ string\ describing\ the\ location's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ @return\ Details\ of\ the\ location's\ exits.\n
comment7.params=
comment7.target=java.lang.String\ getItemString()
comment7.text=\n\ Return\ a\ string\ describing\ the\ location's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ @return\ Details\ of\ the\ location's\ exits.\n
comment8.params=direction
comment8.target=Location\ getExit(java.lang.String)
comment8.text=\n\ Return\ the\ location\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
comment9.params=k
comment9.target=boolean\ hasItem(java.lang.String)
comment9.text=\n\ Checks\ if\ an\ item\ with\ specific\ name\ exists\ in\ location\n\ \n\ @params\ String\ k\ -\ the\ key\ (name)\ of\ the\ item\n
numComments=18
